{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/todo.service\";\nimport * as i2 from \"@angular/common\";\nfunction TaskListComponent_div_14_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"span\", 15);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 16)(4, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_div_14_div_3_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const task_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.setCurrentTask(task_r2));\n    });\n    i0.ɵɵtext(5, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_div_14_div_3_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const task_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.deleteTask(task_r2.id));\n    });\n    i0.ɵɵtext(7, \" Delete \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"completed\", task_r2.completed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r2.title, \" \");\n  }\n}\nfunction TaskListComponent_div_14_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"input\", 20, 21);\n    i0.ɵɵlistener(\"keyup.enter\", function TaskListComponent_div_14_ng_template_4_Template_input_keyup_enter_1_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const _r12 = i0.ɵɵreference(2);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      ctx_r13.currentTask.title = _r12.value;\n      ctx_r13.updateTask(ctx_r13.currentTask);\n      return i0.ɵɵresetView(ctx_r13.currentTask = null);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_div_14_ng_template_4_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const _r12 = i0.ɵɵreference(2);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      ctx_r15.currentTask.title = _r12.value;\n      ctx_r15.updateTask(ctx_r15.currentTask);\n      return i0.ɵɵresetView(ctx_r15.currentTask = null);\n    });\n    i0.ɵɵtext(4, \" Save \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r5.currentTask == null ? null : ctx_r5.currentTask.title);\n  }\n}\nfunction TaskListComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"div\", 10)(2, \"input\", 11);\n    i0.ɵɵlistener(\"change\", function TaskListComponent_div_14_Template_input_change_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const task_r2 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      task_r2.completed = !task_r2.completed;\n      return i0.ɵɵresetView(ctx_r16.updateTask(task_r2));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, TaskListComponent_div_14_div_3_Template, 8, 3, \"div\", 12);\n    i0.ɵɵtemplate(4, TaskListComponent_div_14_ng_template_4_Template, 5, 1, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r2 = ctx.$implicit;\n    const _r4 = i0.ɵɵreference(5);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"checked\", task_r2.completed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r1.currentTask == null ? null : ctx_r1.currentTask.id) !== task_r2.id)(\"ngIfElse\", _r4);\n  }\n}\nlet TaskListComponent = /*#__PURE__*/(() => {\n  class TaskListComponent {\n    todoService;\n    tasks = [];\n    currentTask = null;\n    filter = 'all';\n    constructor(todoService) {\n      this.todoService = todoService;\n    }\n    ngOnInit() {\n      this.loadTasks();\n    }\n    loadTasks() {\n      this.todoService.getTasks().subscribe(tasks => {\n        this.tasks = tasks;\n      });\n    }\n    addTask(title) {\n      if (!title.trim()) return;\n      const newTask = {\n        title,\n        completed: false,\n        userId: 1\n      };\n      this.todoService.addTask(newTask).subscribe(task => {\n        this.tasks.unshift(task);\n      });\n    }\n    updateTask(task) {\n      this.todoService.updateTask(task).subscribe(updatedTask => {\n        const index = this.tasks.findIndex(t => t.id === updatedTask.id);\n        if (index !== -1) this.tasks[index] = updatedTask;\n      });\n    }\n    deleteTask(id) {\n      if (!id) return;\n      this.todoService.deleteTask(id).subscribe(() => {\n        this.tasks = this.tasks.filter(task => task.id !== id);\n      });\n    }\n    setCurrentTask(task) {\n      this.currentTask = {\n        ...task\n      };\n    }\n    get filteredTasks() {\n      if (this.filter === 'active') return this.tasks.filter(task => !task.completed);\n      if (this.filter === 'completed') return this.tasks.filter(task => task.completed);\n      return this.tasks;\n    }\n    static ɵfac = function TaskListComponent_Factory(t) {\n      return new (t || TaskListComponent)(i0.ɵɵdirectiveInject(i1.TodoService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TaskListComponent,\n      selectors: [[\"app-task-list\"]],\n      decls: 15,\n      vars: 7,\n      consts: [[1, \"task-container\"], [1, \"add-task\"], [\"type\", \"text\", \"placeholder\", \"What needs to be done?\", 1, \"task-input\", 3, \"keyup.enter\"], [\"newTaskInput\", \"\"], [1, \"add-button\", 3, \"click\"], [1, \"filters\"], [3, \"click\"], [1, \"task-list\"], [\"class\", \"task-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"task-item\"], [1, \"task-content\"], [\"type\", \"checkbox\", 1, \"task-checkbox\", 3, \"checked\", \"change\"], [\"class\", \"task-view\", 4, \"ngIf\", \"ngIfElse\"], [\"editMode\", \"\"], [1, \"task-view\"], [1, \"task-title\"], [1, \"task-actions\"], [1, \"edit-button\", 3, \"click\"], [1, \"delete-button\", 3, \"click\"], [1, \"task-edit\"], [\"type\", \"text\", 1, \"edit-input\", 3, \"value\", \"keyup.enter\"], [\"editInput\", \"\"], [1, \"save-button\", 3, \"click\"]],\n      template: function TaskListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r18 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"input\", 2, 3);\n          i0.ɵɵlistener(\"keyup.enter\", function TaskListComponent_Template_input_keyup_enter_2_listener() {\n            i0.ɵɵrestoreView(_r18);\n            const _r0 = i0.ɵɵreference(3);\n            ctx.addTask(_r0.value);\n            return i0.ɵɵresetView(_r0.value = \"\");\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_4_listener() {\n            i0.ɵɵrestoreView(_r18);\n            const _r0 = i0.ɵɵreference(3);\n            ctx.addTask(_r0.value);\n            return i0.ɵɵresetView(_r0.value = \"\");\n          });\n          i0.ɵɵtext(5, \" Add \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 5)(7, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_7_listener() {\n            return ctx.filter = \"all\";\n          });\n          i0.ɵɵtext(8, \" All \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_9_listener() {\n            return ctx.filter = \"active\";\n          });\n          i0.ɵɵtext(10, \" Active \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_11_listener() {\n            return ctx.filter = \"completed\";\n          });\n          i0.ɵɵtext(12, \" Completed \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\", 7);\n          i0.ɵɵtemplate(14, TaskListComponent_div_14_Template, 6, 3, \"div\", 8);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵclassProp(\"active\", ctx.filter === \"all\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"active\", ctx.filter === \"active\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"active\", ctx.filter === \"completed\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.filteredTasks);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf],\n      styles: [\".task-container[_ngcontent-%COMP%]{background:white;border-radius:8px;box-shadow:0 4px 12px #0000001a;padding:20px}.add-task[_ngcontent-%COMP%]{display:flex;margin-bottom:20px}.task-input[_ngcontent-%COMP%]{flex:1;padding:12px 15px;font-size:16px;border:1px solid #ddd;border-radius:4px 0 0 4px;border-right:none;outline:none;transition:border-color .3s}.task-input[_ngcontent-%COMP%]:focus{border-color:#3498db}.add-button[_ngcontent-%COMP%]{padding:12px 20px;background-color:#3498db;color:#fff;border:none;border-radius:0 4px 4px 0;cursor:pointer;font-weight:700;transition:background-color .3s}.add-button[_ngcontent-%COMP%]:hover{background-color:#2980b9}.filters[_ngcontent-%COMP%]{display:flex;gap:10px;margin-bottom:20px}.filters[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:8px 16px;background-color:#f8f9fa;border:1px solid #ddd;border-radius:4px;cursor:pointer;transition:all .3s}.filters[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#e9ecef}.filters[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background-color:#3498db;color:#fff;border-color:#3498db}.task-list[_ngcontent-%COMP%]{border:1px solid #eee;border-radius:4px}.task-item[_ngcontent-%COMP%]{padding:15px;border-bottom:1px solid #eee}.task-item[_ngcontent-%COMP%]:last-child{border-bottom:none}.task-content[_ngcontent-%COMP%]{display:flex;align-items:center}.task-checkbox[_ngcontent-%COMP%]{margin-right:15px;width:20px;height:20px;cursor:pointer}.task-view[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;flex:1}.task-title[_ngcontent-%COMP%]{flex:1;font-size:16px}.task-title.completed[_ngcontent-%COMP%]{text-decoration:line-through;color:#95a5a6}.task-actions[_ngcontent-%COMP%]{display:flex;gap:8px}.edit-button[_ngcontent-%COMP%], .delete-button[_ngcontent-%COMP%], .save-button[_ngcontent-%COMP%]{padding:6px 12px;border:none;border-radius:4px;cursor:pointer;font-size:14px}.edit-button[_ngcontent-%COMP%]{background-color:#f39c12;color:#fff}.delete-button[_ngcontent-%COMP%]{background-color:#e74c3c;color:#fff}.task-edit[_ngcontent-%COMP%]{display:flex;flex:1;gap:8px}.edit-input[_ngcontent-%COMP%]{flex:1;padding:8px 12px;border:1px solid #ddd;border-radius:4px;font-size:16px}.save-button[_ngcontent-%COMP%]{background-color:#2ecc71;color:#fff}\"]\n    });\n  }\n  return TaskListComponent;\n})();\nexport { TaskListComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}